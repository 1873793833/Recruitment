<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhaopin.dao.RecruitmentInfoMapper">
	<resultMap id="BaseResultMap" type="com.zhaopin.model.RecruitmentInfo">
		<id column="i_id" property="iId" jdbcType="INTEGER" />
		<result column="position" property="position" jdbcType="VARCHAR" />
		<result column="place" property="place" jdbcType="VARCHAR" />
		<result column="corporate_name" property="corporateName"
			jdbcType="VARCHAR" />
		<result column="salary" property="salary" jdbcType="DECIMAL" />
		<result column="corporate_sector" property="corporateSector"
			jdbcType="VARCHAR" />
		<result column="enterprise_nature" property="enterpriseNature"
			jdbcType="VARCHAR" />
		<result column="education" property="education" jdbcType="VARCHAR" />
		<result column="number_of_recruits" property="numberOfRecruits"
			jdbcType="INTEGER" />
		<result column="corporate_welfare" property="corporateWelfare"
			jdbcType="VARCHAR" />
		<result column="job_information" property="jobInformation"
			jdbcType="VARCHAR" />
		<result column="contact_information" property="contactInformation"
			jdbcType="VARCHAR" />
		<result column="company_information" property="companyInformation"
			jdbcType="VARCHAR" />
		<result column="release_time" property="releaseTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="enterprise_id" property="enterpriseId"
			jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		i_id, position, place, corporate_name, salary,
		corporate_sector,
		enterprise_nature,
		education, number_of_recruits,
		corporate_welfare, job_information,
		contact_information,
		company_information, release_time, update_time, enterprise_id, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.zhaopin.model.RecruitmentInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from recruitment_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from recruitment_info
		where i_id = #{iId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		recruitment_info
		where i_id = #{iId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zhaopin.model.RecruitmentInfoExample">
		delete from recruitment_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zhaopin.model.RecruitmentInfo">
		insert into recruitment_info
		(i_id, position, place,
		corporate_name, salary, corporate_sector,
		enterprise_nature, education, number_of_recruits,
		corporate_welfare,
		job_information, contact_information,
		company_information,
		release_time, update_time,
		enterprise_id, state)
		values
		(#{iId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR},
		#{place,jdbcType=VARCHAR},
		#{corporateName,jdbcType=VARCHAR},
		#{salary,jdbcType=DECIMAL}, #{corporateSector,jdbcType=VARCHAR},
		#{enterpriseNature,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR},
		#{numberOfRecruits,jdbcType=INTEGER},
		#{corporateWelfare,jdbcType=VARCHAR},
		#{jobInformation,jdbcType=VARCHAR},
		#{contactInformation,jdbcType=VARCHAR},
		#{companyInformation,jdbcType=VARCHAR},
		#{releaseTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
		#{enterpriseId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zhaopin.model.RecruitmentInfo">
		insert into recruitment_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="iId != null">
				i_id,
			</if>
			<if test="position != null">
				position,
			</if>
			<if test="place != null">
				place,
			</if>
			<if test="corporateName != null">
				corporate_name,
			</if>
			<if test="salary != null">
				salary,
			</if>
			<if test="corporateSector != null">
				corporate_sector,
			</if>
			<if test="enterpriseNature != null">
				enterprise_nature,
			</if>
			<if test="education != null">
				education,
			</if>
			<if test="numberOfRecruits != null">
				number_of_recruits,
			</if>
			<if test="corporateWelfare != null">
				corporate_welfare,
			</if>
			<if test="jobInformation != null">
				job_information,
			</if>
			<if test="contactInformation != null">
				contact_information,
			</if>
			<if test="companyInformation != null">
				company_information,
			</if>
			<if test="releaseTime != null">
				release_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="enterpriseId != null">
				enterprise_id,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="iId != null">
				#{iId,jdbcType=INTEGER},
			</if>
			<if test="position != null">
				#{position,jdbcType=VARCHAR},
			</if>
			<if test="place != null">
				#{place,jdbcType=VARCHAR},
			</if>
			<if test="corporateName != null">
				#{corporateName,jdbcType=VARCHAR},
			</if>
			<if test="salary != null">
				#{salary,jdbcType=DECIMAL},
			</if>
			<if test="corporateSector != null">
				#{corporateSector,jdbcType=VARCHAR},
			</if>
			<if test="enterpriseNature != null">
				#{enterpriseNature,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				#{education,jdbcType=VARCHAR},
			</if>
			<if test="numberOfRecruits != null">
				#{numberOfRecruits,jdbcType=INTEGER},
			</if>
			<if test="corporateWelfare != null">
				#{corporateWelfare,jdbcType=VARCHAR},
			</if>
			<if test="jobInformation != null">
				#{jobInformation,jdbcType=VARCHAR},
			</if>
			<if test="contactInformation != null">
				#{contactInformation,jdbcType=VARCHAR},
			</if>
			<if test="companyInformation != null">
				#{companyInformation,jdbcType=VARCHAR},
			</if>
			<if test="releaseTime != null">
				#{releaseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enterpriseId != null">
				#{enterpriseId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zhaopin.model.RecruitmentInfoExample"
		resultType="java.lang.Integer">
		select count(*) from recruitment_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update recruitment_info
		<set>
			<if test="record.iId != null">
				i_id = #{record.iId,jdbcType=INTEGER},
			</if>
			<if test="record.position != null">
				position = #{record.position,jdbcType=VARCHAR},
			</if>
			<if test="record.place != null">
				place = #{record.place,jdbcType=VARCHAR},
			</if>
			<if test="record.corporateName != null">
				corporate_name =
				#{record.corporateName,jdbcType=VARCHAR},
			</if>
			<if test="record.salary != null">
				salary = #{record.salary,jdbcType=DECIMAL},
			</if>
			<if test="record.corporateSector != null">
				corporate_sector =
				#{record.corporateSector,jdbcType=VARCHAR},
			</if>
			<if test="record.enterpriseNature != null">
				enterprise_nature =
				#{record.enterpriseNature,jdbcType=VARCHAR},
			</if>
			<if test="record.education != null">
				education = #{record.education,jdbcType=VARCHAR},
			</if>
			<if test="record.numberOfRecruits != null">
				number_of_recruits =
				#{record.numberOfRecruits,jdbcType=INTEGER},
			</if>
			<if test="record.corporateWelfare != null">
				corporate_welfare =
				#{record.corporateWelfare,jdbcType=VARCHAR},
			</if>
			<if test="record.jobInformation != null">
				job_information =
				#{record.jobInformation,jdbcType=VARCHAR},
			</if>
			<if test="record.contactInformation != null">
				contact_information =
				#{record.contactInformation,jdbcType=VARCHAR},
			</if>
			<if test="record.companyInformation != null">
				company_information =
				#{record.companyInformation,jdbcType=VARCHAR},
			</if>
			<if test="record.releaseTime != null">
				release_time = #{record.releaseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.enterpriseId != null">
				enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update recruitment_info
		set i_id = #{record.iId,jdbcType=INTEGER},
		position = #{record.position,jdbcType=VARCHAR},
		place =
		#{record.place,jdbcType=VARCHAR},
		corporate_name =
		#{record.corporateName,jdbcType=VARCHAR},
		salary =
		#{record.salary,jdbcType=DECIMAL},
		corporate_sector =
		#{record.corporateSector,jdbcType=VARCHAR},
		enterprise_nature =
		#{record.enterpriseNature,jdbcType=VARCHAR},
		education =
		#{record.education,jdbcType=VARCHAR},
		number_of_recruits =
		#{record.numberOfRecruits,jdbcType=INTEGER},
		corporate_welfare =
		#{record.corporateWelfare,jdbcType=VARCHAR},
		job_information =
		#{record.jobInformation,jdbcType=VARCHAR},
		contact_information =
		#{record.contactInformation,jdbcType=VARCHAR},
		company_information =
		#{record.companyInformation,jdbcType=VARCHAR},
		release_time =
		#{record.releaseTime,jdbcType=TIMESTAMP},
		update_time =
		#{record.updateTime,jdbcType=TIMESTAMP},
		enterprise_id =
		#{record.enterpriseId,jdbcType=INTEGER},
		state =
		#{record.state,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zhaopin.model.RecruitmentInfo">
		update recruitment_info
		<set>
			<if test="position != null">
				position = #{position,jdbcType=VARCHAR},
			</if>
			<if test="place != null">
				place = #{place,jdbcType=VARCHAR},
			</if>
			<if test="corporateName != null">
				corporate_name = #{corporateName,jdbcType=VARCHAR},
			</if>
			<if test="salary != null">
				salary = #{salary,jdbcType=DECIMAL},
			</if>
			<if test="corporateSector != null">
				corporate_sector = #{corporateSector,jdbcType=VARCHAR},
			</if>
			<if test="enterpriseNature != null">
				enterprise_nature = #{enterpriseNature,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=VARCHAR},
			</if>
			<if test="numberOfRecruits != null">
				number_of_recruits =
				#{numberOfRecruits,jdbcType=INTEGER},
			</if>
			<if test="corporateWelfare != null">
				corporate_welfare = #{corporateWelfare,jdbcType=VARCHAR},
			</if>
			<if test="jobInformation != null">
				job_information = #{jobInformation,jdbcType=VARCHAR},
			</if>
			<if test="contactInformation != null">
				contact_information =
				#{contactInformation,jdbcType=VARCHAR},
			</if>
			<if test="companyInformation != null">
				company_information =
				#{companyInformation,jdbcType=VARCHAR},
			</if>
			<if test="releaseTime != null">
				release_time = #{releaseTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="enterpriseId != null">
				enterprise_id = #{enterpriseId,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where i_id = #{iId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zhaopin.model.RecruitmentInfo">
		update
		recruitment_info
		set position = #{position,jdbcType=VARCHAR},
		place =
		#{place,jdbcType=VARCHAR},
		corporate_name =
		#{corporateName,jdbcType=VARCHAR},
		salary = #{salary,jdbcType=DECIMAL},
		corporate_sector = #{corporateSector,jdbcType=VARCHAR},
		enterprise_nature = #{enterpriseNature,jdbcType=VARCHAR},
		education =
		#{education,jdbcType=VARCHAR},
		number_of_recruits =
		#{numberOfRecruits,jdbcType=INTEGER},
		corporate_welfare =
		#{corporateWelfare,jdbcType=VARCHAR},
		job_information =
		#{jobInformation,jdbcType=VARCHAR},
		contact_information =
		#{contactInformation,jdbcType=VARCHAR},
		company_information =
		#{companyInformation,jdbcType=VARCHAR},
		release_time =
		#{releaseTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		enterprise_id =
		#{enterpriseId,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER}
		where i_id = #{iId,jdbcType=INTEGER}
	</update>

	<resultMap id="MyBaseResultMap" type="com.zhaopin.model.RecruitmentInfo">
		<id column="i_id" property="iId" jdbcType="INTEGER" />
		<result column="position" property="position" jdbcType="VARCHAR" />
		<result column="place" property="place" jdbcType="VARCHAR" />
		<result column="corporate_name" property="corporateName"
			jdbcType="VARCHAR" />
		<result column="salary" property="salary" jdbcType="DECIMAL" />
		<result column="corporate_sector" property="corporateSector"
			jdbcType="VARCHAR" />
		<result column="enterprise_nature" property="enterpriseNature"
			jdbcType="VARCHAR" />
		<result column="education" property="education" jdbcType="VARCHAR" />
		<result column="number_of_recruits" property="numberOfRecruits"
			jdbcType="INTEGER" />
		<result column="corporate_welfare" property="corporateWelfare"
			jdbcType="VARCHAR" />
		<result column="job_information" property="jobInformation"
			jdbcType="VARCHAR" />
		<result column="contact_information" property="contactInformation"
			jdbcType="VARCHAR" />
		<result column="company_information" property="companyInformation"
			jdbcType="VARCHAR" />
		<result column="release_time" property="releaseTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="enterprise_id" property="enterpriseId"
			jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<association property="enterpriseUser" javaType="com.zhaopin.model.EnterpriseUser">
			<id column="e_id" property="eId" jdbcType="INTEGER" />
			<result column="e_account" property="eAccount" jdbcType="VARCHAR" />
			<result column="e_password" property="ePassword" jdbcType="VARCHAR" />
			<result column="e_company_name" property="eCompanyName"
				jdbcType="VARCHAR" />
			<result column="e_corporate_sector" property="eCorporateSector"
				jdbcType="VARCHAR" />
			<result column="e_enterprise_nature" property="eEnterpriseNature"
				jdbcType="VARCHAR" />
			<result column="e_company_info" property="eCompanyInfo"
				jdbcType="VARCHAR" />
			<result column="e_address" property="eAddress" jdbcType="VARCHAR" />
			<result column="e_contacts" property="eContacts" jdbcType="VARCHAR" />
			<result column="e_contact_number" property="eContactNumber"
				jdbcType="VARCHAR" />
			<result column="e_phone_number" property="ePhoneNumber"
				jdbcType="VARCHAR" />
			<result column="e_email" property="eEmail" jdbcType="VARCHAR" />
			<result column="e_regtime" property="eRegtime" jdbcType="TIMESTAMP" />
			<result column="type" property="type" jdbcType="VARCHAR" />
			<result column="acc_status" property="accStatus" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<select id="selectByAccountAndTime" resultMap="MyBaseResultMap">
		select * FROM
		enterprise_user a LEFT JOIN recruitment_info b ON
		a.e_id=b.enterprise_id WHERE a.e_account LIKE #{param1} AND
		b.update_time >=#{param2}
	</select>
	<select id="selectAll" resultMap="MyBaseResultMap">
		select * from recruitment_info
		a LEFT JOIN enterprise_user b on a.enterprise_id=b.e_id WHERE
		a.position like #{param1} and b.e_company_name LIKE #{param2} AND a.state=#{param3}
	</select>
	
	<select id="selectInfoByexample" resultMap="MyBaseResultMap">
		SELECT * from enterprise_user a LEFT
		JOIN recruitment_info b ON a.e_id=b.enterprise_id WHERE a.e_id=#{param1} AND
		b.position like #{param2} AND b.place LIKE #{param3} AND b.state=1 order by
		b.salary ${param4}
	</select>
</mapper>